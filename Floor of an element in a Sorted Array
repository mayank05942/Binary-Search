Given a sorted array and a value x, the floor of x is the largest element in array smaller than or equal to x. Write efficient functions to find floor of x.

Examples:

Input : arr[] = {1, 2, 8, 10, 10, 12, 19}, x = 5
Output : 2

Explanation : 2 is the largest element in 
arr[] smaller than 5.

Input : arr[] = {1, 2, 8, 10, 10, 12, 19}, x = 20
Output : 19
Explanation :19 is the largest element in
arr[] smaller than 20.

Input : arr[] = {1, 2, 8, 10, 10, 12, 19}, x = 0
Output : -1
Explanation :Since floor doesn't exist,
output is -1.


Code:
def search(arr,k):
    start = 0
    end = len(arr)-1
    if k < arr[0]:
        return "Floor cannot be calculated"
    if k > arr[-1]:
        return arr[-1]
    temp = 0
    while start <= end:
        mid = start + (end-start)//2
        if arr[mid] == k:
            return arr[mid]
        elif arr[mid] > k:
            # we want small elements than k hence we will look in left
            end = mid-1
        else:
            # hence we have found one candidate but we have to check if it is the greatest among them.
            temp = arr[mid]
            start = mid+1
    return temp

print(search(arr,k))


